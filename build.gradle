plugins {
    id 'org.springframework.boot' version '2.2.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'checkstyle'
}

group = 'com.admiral.tsp'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }

    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

checkstyle {
    toolVersion "7.6.1"
    config = rootProject.resources.text.fromFile("config/checkstyle/checkstyle.xml")
}


def profile1 = "dev"




dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'

    compileOnly 'org.projectlombok:lombok'


    if (profile1 == "devNo") {
//        runtimeOnly 'com.h2database:h2'
//        println("H2")
    } else {
        runtimeOnly 'mysql:mysql-connector-java'
        println("SQL")
    }

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    
    testImplementation('junit:junit:4.13')
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    testCompile 'com.structurizr:structurizr-core:1.3.3'
    testCompile 'com.structurizr:structurizr-client:1.3.3'
    testCompile 'com.structurizr:structurizr-spring:1.3.1'
    
}

checkstyleMain {
    source ='src/main/java'
}

checkstyleTest {
    source ='src/test/java'
}

test {
    useJUnitPlatform()
}

bootRun {
    sourceResources sourceSets.main
//SQL
//        
    environment 'spring.profiles.active', 'prod'

//H2
//    systemProperty 'spring.profiles.active', 'dev'

    main = 'com.admiral.tsp.timesheetportal.TimesheetportalApplication'
}